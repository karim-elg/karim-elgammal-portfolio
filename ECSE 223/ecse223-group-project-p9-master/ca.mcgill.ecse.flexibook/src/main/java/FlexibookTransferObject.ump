namespace ca.mcgill.ecse.flexibook.controller;

class TOService{
	isA TOBookableService;
	int duration;
	// if downtimeDuration is 0, then downtimeStart is irrelevant
  	int downtimeDuration;
  	int downtimeStart;

}

class TOServiceCombo{
	isA TOBookableService;
	* -> 0..1 TOComboItem mainService;
  	// the services should be {ordered}; however, since Umple translates every * association
  	// or composition into a list, it is possible to order items in that list given Umple's API
  	1 <@>- 2..* TOComboItem services;
}

class TOBookableService{
	abstract;
	 name;
}

class TOComboItem {
	Boolean mandatory;
	* -> 1 TOService service;
	
}

class TOUser{

	abstract;
	username;
	password;

}

class TOOwner{
	isA TOUser;
}

class TOCustomer{
	isA TOUser;
}


class TOBusiness {
  name;
  address;
  phoneNumber;
  email;
  // since there is only one business in this system, the first
  // 0..1 should be a 1. since this is a directed association, the
  // first multiplicity is not taken into account. hence, it is
  // changed to 0..1 to avoid Umple issuing warning W036
  // Unmanaged Multiplicity
  0..1 -> * TOBusinessHour businessHours;
  0..1 -> * TOTimeSlot holidays;
  0..1 -> * TOTimeSlot vacation;
  // association to Owner is not modeled because there is
  // only one owner and only one business in the system
}

class TOBusinessHour {
  enum DayOfWeek { Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday }
  DayOfWeek dayOfWeek;
  Time startTime;
  Time endTime;
}


class TOAppointment{


 * -- 1 TOCustomer customer;
  * -- 1 TOBookableService bookableService;
  * -> * TOComboItem chosenItems;
  0..1 -> 1 TOTimeSlot timeSlot;

}

class TOAppointmentCalendarItem {
 date;
startTime;
endTime;
}


class TOTimeSlot {
  Date startDate;
  Time startTime;
  Date endDate;
  Time endTime;
}